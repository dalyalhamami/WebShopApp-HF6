@using WebShopApp_Maui.Services
@using Microsoft.Maui.Storage;
@using Newtonsoft.Json;
@inject IWebShopAppService webShopAppService;
@inject NavigationManager navManager;

<style>
    .content {
        padding: 10px;
    }

    .card {
        margin-bottom: 20px;
    }

    .card-header {
        font-size: 1.2rem;
        padding: 10px;
        text-align: center;
    }

    .card-body {
        padding: 10px;
    }

    .table {
        font-size: 0.9rem;
    }

    .button-cell {
        text-align: center;
        vertical-align: middle;
    }

    .custom-btn {
        background-color: transparent;
        border: none;
        padding: 0;
        font-size: 0;
        line-height: 1;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: auto;
        height: auto;
    }

        .custom-btn i {
            font-size: 16px;
            color: gray;
        }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-content {
        width: 90%;
        max-width: 500px;
        padding: 20px;
        background-color: white;
        border-radius: 10px;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-body {
        margin: 20px 0;
        max-height: 400px; 
        overflow-y: auto; 
    }

    .modal-footer {
        display: flex;
        justify-content: space-between;
    }

        .modal-footer .btn {
            width: 45%;
            font-size: 1rem;
        }

    .modal-body table th {
        text-align: left;
        width: 30%;
        font-weight: bold;
    }

    .modal-body table td {
        width: 70%;
        padding-left: 10px;
    }

    .modal-body img {
        border-radius: 5px;
        border: 1px solid #ddd;
    }

</style>

<div class="column content">
    @if (users == null)
    {
        <span>Loading...</span>
    }
    else
    {
        <div class="card">
            <h4 class="card-header">Users</h4>

            <div class="card-body">
                <table class="table table-striped table-bordered bg-light">
                    <thead>
                        <tr>
                            <th class="button-cell">No.</th>
                            <th class="button-cell">Name</th>
                            <th class="button-cell">Role</th>
                            <th class="button-cell">Details</th>
                            <th class="button-cell">Orders</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (index, user) in users.Select((user, i) => (i + 1, user)))
                        {
                            <tr>
                                <td class="button-cell">@index</td>
                                <td class="button-cell">@user.Name</td>
                                <td class="button-cell">@(user.Roles == 1 ? "Admin" : "User")</td>
                                <td class="button-cell">
                                    <button class="btn custom-btn" @onclick="(() => EditUser(user))">
                                        <i class="fa fa-info-circle"></i>
                                    </button>
                                </td>
                                <td class="button-cell">
                                    <button class="btn custom-btn" @onclick="(() => ViewUserOrderDetails(user.Id))">
                                        <i class="fa fa-archive"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@if (showAlertMessage)
{
    <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Alert</h5>
                <span class="close" @onclick="ToggleSuccessPopup">&times;</span>
            </div>
            <div class="modal-body">
                @Message
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-primary" value="Close" @onclick="ToggleSuccessPopup" />
            </div>
        </div>
    </div>
}

@if (showEditPopup)
{
    <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>User Details</h5>
                <span class="close" @onclick="ToggleEditPopup">&times;</span>
            </div>
            <div class="modal-body">
                <EditForm Model="@userToEdit" OnValidSubmit="UpdateUser">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label>Name :</label>
                        <InputText @bind-Value="userToEdit.Name" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Email :</label>
                        <InputText @bind-Value="userToEdit.Email" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Mobile :</label>
                        <InputText @bind-Value="userToEdit.Mobile" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Address :</label>
                        <InputText @bind-Value="userToEdit.Address" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Role :</label>
                        <select @bind="@userToEdit.Roles" class="form-control">
                            <option value="1">Admin</option>
                            <option value="0">User</option>
                        </select>
                        <ValidationMessage For="@(() => userToEdit.Roles)" />
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
                <input type="submit" class="btn btn-primary" value="Save" @onclick="UpdateUser" />
                <input type="button" class="btn btn-primary" value="Cancel" @onclick="ToggleEditPopup" />
            </div>
        </div>
    </div>
}

@if (showOrderDetailsPopup)
{
    <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Order Details</h5>
                <span class="close" @onclick="ToggleOrderDetailsPopup">&times;</span>
            </div>
            <div class="modal-body">
                @if (orderDetailsWithOrderId == null || orderDetailsWithOrderId.Count == 0)
                {
                    <p>No orders found for this user</p>
                }
                else
                {
                    @foreach (var order in orderDetailsWithOrderId)
                    {
                        <div class="order-container" style="margin-bottom: 20px;">
                            <h6>Order ID: @order.OrderId</h6>  @* Display Order ID *@

                            <table class="table table-striped table-bordered bg-light">
                                <tbody>
                                    @foreach (var item in order.Details)
                                    {
                                        <tr>
                                            <th>Product Name:</th>
                                            <td>@item.ProductName</td>
                                        </tr>
                                        <tr>
                                            <th>Product Image:</th>
                                            <td>
                                                <img src="@item.ProductImage" alt="@item.ProductName" style="width: 100px; height: auto;" />
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Quantity:</th>
                                            <td>@item.Quantity</td>
                                        </tr>
                                        <tr>
                                            <th>Shipping Address:</th>
                                            <td>@item.ShippingAddress</td>
                                        </tr>
                                        <tr>
                                            <th>Price:</th>
                                            <td>$@item.Price.00</td>
                                        </tr>
                                        <tr>
                                            <th>Shipping Charges:</th>
                                            <td>$@item.ShippingCharges.00</td>
                                        </tr>
                                        <tr>
                                            <th>Total:</th>
                                            <td>$@item.Total.00</td>
                                        </tr>
                                        <tr>
                                            <th>Payment Mode:</th>
                                            <td>@item.PaymentMode</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <hr style="border-top: 1px solid #ddd;" />
                    }
                }
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-primary" value="Close" @onclick="ToggleOrderDetailsPopup" />
            </div>
        </div>
    </div>

}

@code {
    public List<UserModel> users { get; set; }
    public UserModel userToEdit { get; set; }
    public List<OrderWithDetails> orderDetailsWithOrderId { get; set; }
    public bool showEditPopup = false;
    public bool showOrderDetailsPopup = false;

    public bool showAlertMessage = false;
    public string Message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetUsers();
    }

    private async Task GetUsers()
    {
        users = await webShopAppService.GetUsersAsync();
    }

    private void EditUser(UserModel user)
    {
        userToEdit = user;
        ToggleEditPopup();
    }

    private async Task UpdateUser()
    {
        var updatedUser = await webShopAppService.UpdateUserAsync(userToEdit);
        if (updatedUser != null)
        {
            ToggleEditPopup();
            Message = "User Updated Successfully !!";
            ToggleSuccessPopup();
            await GetUsers(); // Reload users after update
        }
        else
        {
            Console.WriteLine("Failed to update user role");
            ToggleSuccessPopup();
        }
    }

    private async Task ViewUserOrderDetails(int userId)
    {
        var orders = await webShopAppService.GetOrdersByUserId(userId);

        if (orders != null && orders.Count > 0)
        {
            orderDetailsWithOrderId = new List<OrderWithDetails>();  // Use the new class here

            foreach (var order in orders)
            {
                if (!string.IsNullOrEmpty(order.OrderId))
                {
                    var details = await webShopAppService.GetOrderDetailForUser(userId, order.OrderId);
                    if (details != null)
                    {
                        orderDetailsWithOrderId.Add(new OrderWithDetails
                            {
                                OrderId = order.OrderId,
                                Details = details
                            });
                    }
                }
            }
        }
        else
        {
            // No orders found for this user
            orderDetailsWithOrderId = null;
        }
        ToggleOrderDetailsPopup();
    }

    private void ToggleEditPopup()
    {
        showEditPopup = !showEditPopup;
    }

    private void ToggleOrderDetailsPopup()
    {
        showOrderDetailsPopup = !showOrderDetailsPopup;
    }

    private void ToggleSuccessPopup()
    {
        showAlertMessage = showAlertMessage == true ? false : true;
    }
}
