@using WebShopApp_Maui.Services
@using Microsoft.Maui.Storage;
@using Newtonsoft.Json;
@inject IWebShopAppService webShopAppService;
@inject NavigationManager navManager;

<style>
.card-body {
    overflow-y: auto;
    max-height: auto; 
    margin-top: 10px;
}

.user-table {
    width: 100%;
    border: 1px solid gray;
    margin-top: 10px; 
}

.user-table th,
.user-table td {
    border: 1px solid dimgray;
    text-align: center;
    vertical-align: top;
    font-size: 0.9rem; 
}

.button-cell {
    align-content: center;
}

.button-right {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 15px; 
}


.btn-clear, .btn-save {
    border: none;
    padding: 8px; 
    font-size: 0.9em; 
    border-radius: 5px;
    cursor: pointer;
    width: 40%; 
}

.btn-clear {
    background-color: lightgray;
    color: coral;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn-save {
    background-color: coral;
    color: white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

     /* Modal Styling */
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        padding: 15px;
        box-sizing: border-box;
    }

    .modal-content {
        width: 100%;
        max-width: 90%;
        padding: 15px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);
    }

    .modal-header, .modal-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-header {
        border-bottom: 1px solid #f1f1f1;
        padding-bottom: 10px;
    }

    .modal-body {
        text-align: center;
        padding: 15px 0;
    }

    .modal-body p {
        font-size: 0.9rem;
        margin-bottom: 10px;
        color: #333;
    }

    .user-info {
        display: flex;
        justify-content: space-between;
        padding: 10px;
    }

    .user-info label {
        width: 90px;
        padding: 8px;
    }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        padding-top: 10px;
        border-top: 1px solid #f1f1f1;
    }

    .modal-btn {
        border: none;
        padding: 8px;
        font-size: 0.9em;
        border-radius: 5px;
        cursor: pointer;
        width: 40%;
    }

    .confirm {
        background-color: coral;
        color: white;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .cancel {
        background-color: lightgray;
        color: coral;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .custom-close {
        background-color: transparent;
        border: none;
        font-size: 1.2rem;
        color: #000;
        cursor: pointer;
        position: relative;
        top: -10px;
        right: -10px;
    }

    .close-btn {
        border: none;
        padding: 8px;
        font-size: 0.9em;
        border-radius: 5px;
        cursor: pointer;
        width: 40%;
        background-color: coral;
        color: white;
    }
</style>

@if (users == null)
    {
        <span>Loading...</span>
    }
    else
    {
        <div class="card">
            <h4 class="card-header">Brugere</h4>

            <div class="card-body">
                <table class="table table-striped table-bordered bg-light user-table">
                  <thead>
                        <tr>
                            <th class="button-cell">Nr.</th>
                            <th class="button-cell">Navn</th>
                            <th class="button-cell">Rolle</th>
                            <th class="button-cell">Rediger</th>
                            <th class="button-cell">Ordrer</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (index, user) in users.Select((user, i) => (i + 1, user)))
                        {
                            <tr>
                                <td class="button-cell">@index</td>
                                <td class="button-cell">@user.Name</td>
                                <td class="button-cell">@(user.Roles == 1 ? "Admin" : "User")</td>
                                <td class="button-cell">
                                    <button class="btn custom-btn" @onclick="(() => EditUser(user))">
                                        <i class="fa fa-pencil"></i>
                                    </button>
                                </td>
                                <td class="button-cell">
                                    <button class="btn custom-btn" @onclick="(() => ViewUserOrderDetails(user.Id))">
                                        <i class="fa fa-info-circle"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

@if (showAlertMessage)
{
<div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span></span>
                <button class="custom-close" @onclick="ToggleSuccessPopup">&times;</button>
            </div>
            <div class="modal-body">
                @Message
            </div>
            <div class="modal-footer">
                <input type="button" class="close-btn" value="Luk" @onclick="ToggleSuccessPopup" />
            </div>
        </div>
    </div>
}

@if (showEditPopup)
{
      <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Rediger Bruger</h5>
                <button class="custom-close" @onclick="ToggleEditPopup">&times;</button>
            </div>
            <div class="modal-body">
                <EditForm Model="@userToEdit" OnValidSubmit="UpdateUser">
                    <div class="user-info">
                        <label>Navn:</label>
                        <InputText @bind-Value="userToEdit.Name" class="form-control" />
                    </div>
                    <div class="user-info">
                        <label>E-mail:</label>
                        <InputText @bind-Value="userToEdit.Email" class="form-control" />
                    </div>
                    <div class="user-info">
                        <label>Mobil:</label>
                        <InputText @bind-Value="userToEdit.Mobile" class="form-control" />
                    </div>
                    <div class="user-info">
                        <label>Adresse:</label>
                        <InputText @bind-Value="userToEdit.Address" class="form-control" />
                    </div>
                    <div class="user-info">
                        <label>Rolle:</label>
                        <select @bind="@userToEdit.Roles" class="form-control">
                            <option value="1">Admin</option>
                            <option value="0">User</option>
                        </select>
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
                <input type="button" class="modal-btn cancel" value="Annuller" @onclick="ToggleEditPopup" />
                <input type="submit" class="modal-btn confirm" value="Gem" @onclick="UpdateUser" />
            </div>
        </div>
    </div>
}

@if (showOrderDetailsPopup)
{
       <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Ordredetaljer</h5>
                <button class="custom-close" @onclick="ToggleOrderDetailsPopup">&times;</button>
            </div>
            <div class="modal-body" style="height: 500px; overflow-y:scroll;">
                @if (orderDetailsWithOrderId == null || orderDetailsWithOrderId.Count == 0)
                {
                    <p style="font-weight:bold; color:dimgray; margin-top: 40%">Ingen ordrer fundet for denne bruger</p>
                }
                else
                {
                    @foreach (var order in orderDetailsWithOrderId)
                    {
                        <div class="order-container" style="margin-bottom: 20px;">
                            <h6 style="color:coral; font-weight:bold; text-align:left; padding:5px;">Ordre-ID: @order.OrderId</h6>  @* Display Order ID *@

                            <table class="table table-striped table-bordered bg-light">
                                <tbody>
                                    @foreach (var item in order.Details)
                                    {
                                        <tr>
                                            <th>Produkt billede:</th>
                                            <td>
                                                <img src="@item.ProductImage" alt="@item.ProductName" style="width: 70px; height: auto;" />
                                            </td>
                                        </tr>
                                        <tr>
                                            <th>Produkt navn:</th>
                                            <td>@item.ProductName</td>
                                        </tr>
                                        <tr>
                                            <th>Antal:</th>
                                            <td>@item.Quantity</td>
                                        </tr>
                                        <tr>
                                            <th>Adresse:</th>
                                            <td>@item.ShippingAddress</td>
                                        </tr>
                                        <tr>
                                            <th>Pris:</th>
                                            <td>@item.Price.00 Kr</td>
                                        </tr>
                                        <tr>
                                            <th>Fragt:</th>
                                            <td>@item.ShippingCharges.00 Kr</td>
                                        </tr>
                                        <tr>
                                            <th>Total:</th>
                                            <td>@item.Total.00 Kr</td>
                                        </tr>
                                        <tr>
                                            <th>Betalingsmetode:</th>
                                            <td>@item.PaymentMode</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <hr style="border-top: 1px solid #ddd;" />
                    }
                }
            </div>
            <div class="modal-footer">
                <input type="button" class="close-btn" value="Luk" @onclick="ToggleOrderDetailsPopup" />
            </div>
        </div>
    </div>
}

@code {
    public List<UserModel> users { get; set; }
    public UserModel userToEdit { get; set; }
    public List<OrderWithDetails> orderDetailsWithOrderId { get; set; }
    public bool showEditPopup = false;
    public bool showOrderDetailsPopup = false;

    public bool showAlertMessage = false;
    public string Message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetUsers();
    }

    private async Task GetUsers()
    {
        users = await webShopAppService.GetUsersAsync();
    }

    private void EditUser(UserModel user)
    {
        userToEdit = user;
        ToggleEditPopup();
    }

    private async Task UpdateUser()
    {
        var updatedUser = await webShopAppService.UpdateUserAsync(userToEdit);
        if (updatedUser != null)
        {
            ToggleEditPopup();
            Message = "Bruger opdateret med succes !!";
            ToggleSuccessPopup();
            await GetUsers(); // Reload users after update
        }
        else
        {
            Message = "Kunne ikke opdatere brugerdata";
            ToggleSuccessPopup();
        }
    }

    private async Task ViewUserOrderDetails(int userId)
    {
        var orders = await webShopAppService.GetOrdersByUserId(userId);

        if (orders != null && orders.Count > 0)
        {
            orderDetailsWithOrderId = new List<OrderWithDetails>();  // Use the new class here

            foreach (var order in orders)
            {
                if (!string.IsNullOrEmpty(order.OrderId))
                {
                    var details = await webShopAppService.GetOrderDetailForUser(userId, order.OrderId);
                    if (details != null)
                    {
                        orderDetailsWithOrderId.Add(new OrderWithDetails
                            {
                                OrderId = order.OrderId,
                                Details = details
                            });
                    }
                }
            }
        }
        else
        {
            // No orders found for this user
            orderDetailsWithOrderId = null;
        }
        ToggleOrderDetailsPopup();
    }

    private void ToggleEditPopup()
    {
        showEditPopup = !showEditPopup;
    }

    private void ToggleOrderDetailsPopup()
    {
        showOrderDetailsPopup = !showOrderDetailsPopup;
    }

    private void ToggleSuccessPopup()
    {
        showAlertMessage = showAlertMessage == true ? false : true;
    }
}
