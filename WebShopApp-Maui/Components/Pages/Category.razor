@using WebShopApp_Maui.Services
@using Microsoft.Maui.Storage;
@using Newtonsoft.Json;
@inject IWebShopAppService webShopAppService;
@inject NavigationManager navManager;

<style>
    .card-body {
        overflow-y: auto;
        max-height: 250px; 
        margin-top: 10px;
    }

    /* Category Table */
    .category-table {
        width: 100%;
        border: 1px solid gray;
        margin-top: 10px; 
    }

        .category-table th,
        .category-table td {
            border: 1px solid dimgray;
            text-align: center;
            vertical-align: top;
            font-size: 0.9rem;
        }

    .button-cell {
        align-content: center;
    }

    /* Button Styling */
    .button-right {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 15px;
    }

    .btn-clear, .btn-save {
        border: none;
        padding: 8px; 
        font-size: 0.9em; 
        border-radius: 5px;
        cursor: pointer;
        width: 40%; 
    }

    .btn-clear {
        background-color: lightgray;
        color: #ff6150;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .btn-save {
        background-color: #ff6150;
        color: white;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    /* Modal Styling */
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        padding: 15px;
        box-sizing: border-box;
    }

    .modal-content {
        width: 100%;
        max-width: 90%;
        padding: 15px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);
    }

    .modal-header, .modal-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-header {
        border-bottom: 1px solid #f1f1f1;
        padding-bottom: 10px;
    }

    .modal-body {
        text-align: center;
        padding: 15px 0;
    }

    .modal-body p {
        font-size: 0.9rem;
        margin-bottom: 10px;
        color: #333;
    }

    /* Category Info */
    .category-info {
        display: flex;
        padding: 10px;
        justify-content: space-between;
    }

     .category-info label {
         width: 90px;
         padding: 8px;
     }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        padding-top: 10px;
        border-top: 1px solid #f1f1f1;
    }

    .modal-btn {
        border: none;
        padding: 8px;
        font-size: 0.9em;
        border-radius: 5px;
        cursor: pointer;
        width: 40%;
    }

    .confirm {
        background-color: #ff6150;
        color: white;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .cancel {
        background-color: lightgray;
        color: coral;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .custom-close {
        background-color: transparent;
        border: none;
        font-size: 1.2rem;
        color: #000;
        cursor: pointer;
        position: relative;
        top: -10px;
        right: -10px;
    }

    .close-btn {
        border: none;
        padding: 8px;
        font-size: 0.9em;
        border-radius: 5px;
        cursor: pointer;
        width: 40%;
        background-color: #ff6150;
        color: white;
    }
</style>

@if (category == null)
        {
            <span>Indlæser...</span>
        }
        else
        {
            <div class="card">
                <h4 class="card-header">Tilføj nyt kategori</h4>
        <div class="card-body">
            <EditForm Model="@category" OnValidSubmit="SaveCategory">
                <DataAnnotationsValidator />
                <div class="form-row">
                    <div class="form-group col-5">
                        <label>Name :</label>
                        <InputText @bind-Value="category.Name" class="form-control" />
                        <ValidationMessage For="@(() => category.Name)" />
                    </div>
                </div>
                <br />
                <div class="button-right">
                    <input type="button" class="btn-clear" value="Ryd" @onclick="ClearForm" />
                    <input type="submit" class="btn-save" value="Gem" />
                </div>
            </EditForm>
        </div>

        <div class="card-body">
            @if (categories == null)
            {
                <span>Indlæser...</span>
            }
            else
            {
                <table class="table table-striped table-bordered bg-light category-table">
                    <thead>
                        <tr>
                            <th class="button-cell">Nr.</th>
                            <th class="button-cell">Titel</th>
                            <th class="button-cell">Rediger</th>
                            <th class="button-cell">Slet</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (index, cat) in categories.Select((cat, i) => (i + 1, cat)))
                        {
                            <tr>
                                <td class="button-cell">@index</td>
                                <td class="button-cell">@cat.Name</td>
                                <td class="button-cell">
                                    <button class="btn custom-btn" @onclick="(() => EditButtonClick(cat))">
                                        <i class="fa fa-pencil"></i>
                                    </button>
                                </td>
                                <td class="button-cell">
                                    <button class="btn custom-btn" @onclick="(() => DeleteButtonClick(cat))">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
            </div>
        }

@if (showEditPopup == true)
{
     <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Rediger Kategori</h5>
                <button class="custom-close" @onclick="ToggleEditPopup">&times;</button>
            </div>
            <div class="modal-body">
                <EditForm Model="@categoryToUpdate" OnInvalidSubmit="UpdateCategory">
                    <div class="category-info">
                            <label>Navn:</label>
                            <InputText @bind-Value="categoryToUpdate.Name" class="form-control" />
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
                <input type="button" class="modal-btn cancel" value="Annuller" @onclick="ToggleEditPopup" />
                <input type="button" class="modal-btn confirm" value="Gem" @onclick="UpdateCategory" />
            </div>
        </div>
    </div>
}

@if (showDeletePopup == true)
{
    <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Slet Kategori</h5>
                <button class="custom-close" @onclick="ToggleDeletePopup">&times;</button>
            </div>
            <div class="modal-body">
                Er du sikker på, at du vil slette <span style="background-color:#ffc1b3;">@categoryToDelete.Name</span> kategorien?
            </div>
            <div class="modal-footer">
                <input type="button" class="modal-btn cancel" value="Nej" @onclick="ToggleDeletePopup" />
                <input type="button" class="modal-btn confirm" value="Ja" @onclick="DeleteCategory" />
            </div>
        </div>
    </div>
}

@if (successPopup == true)
{
    <div class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span></span>
                <button class="custom-close" @onclick="ToggleDeletePopup">&times;</button>
            </div>
            <div class="modal-body">
                @Message
            </div>
            <div class="modal-footer">
                <input type="button" class="close-btn" value="Luk" @onclick="ToggleSuccessPopup" />
            </div>
        </div>
    </div>
}

@code {

    [CascadingParameter]
    public EventCallback notify { get; set; }

    public CategoryModel category { get; set; }
    public List<CategoryModel> categories { get; set; }
    public CategoryModel categoryToUpdate { get; set; }
    public CategoryModel categoryToDelete { get; set; }
    public bool showEditPopup = false;
    public bool showDeletePopup = false;
    public bool successPopup = false;
    public string Message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        category = new CategoryModel();
        await GetCategories();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await notify.InvokeAsync();
        }
    }

    private async Task SaveCategory()
    {
        await webShopAppService.SaveCategoryAsync(category);
        Message = "Kategori tilføjet med succes !!";
        ToggleSuccessPopup();
        category = new CategoryModel();
        await GetCategories();
        ClearForm();
    }

    private async Task UpdateCategory()
    {
        var updatedCategory = await webShopAppService.UpdateCategoryAsync(categoryToUpdate);

        // Check if updatedCategory is not null, indicating a successful update
        if (updatedCategory != null)
        {
            ToggleEditPopup();
            Message = "Kategori opdateret med succes !!";
            ToggleSuccessPopup();
            categoryToUpdate = new CategoryModel();
            await GetCategories();
        }
        else
        {
            // Handle case where updatedCategory is null, indicating an unsuccessful update
            Message = "Kategori ikke opdateret. Prøv igen !!";
            ToggleSuccessPopup();
        }
    }

    private async Task DeleteCategory()
    {
        if (categoryToDelete != null)
        {
            var flag = await webShopAppService.DeleteCategoryAsync(categoryToDelete.Id);
            ToggleDeletePopup();
            if (flag)
            {
                Message = "Kategori slettet med succes !!";
            }
            else
            {
                Message = "Kategori ikke slettet. Prøv igen !!";
            }

            ToggleSuccessPopup();
            categoryToDelete = null;
            await GetCategories();
        }
    }

    private async Task GetCategories()
    {
        categories = await webShopAppService.GetCategoriesAsync();
    }

    private void ClearForm()
    {
        category = new CategoryModel();
    }

    private void EditButtonClick(CategoryModel categoryToUpdate)
    {
        this.categoryToUpdate = categoryToUpdate;
        ToggleEditPopup();   
    }

    private void DeleteButtonClick(CategoryModel categoryToDelete)
    {
        this.categoryToDelete = categoryToDelete;
        ToggleDeletePopup();
    }

    private void ToggleEditPopup()
    {
        showEditPopup = showEditPopup == true ? false : true;
    }

    private void ToggleDeletePopup()
    {
        showDeletePopup = showDeletePopup == true ? false : true;
    }

    private void ToggleSuccessPopup()
    {
        successPopup = successPopup == true ? false : true;
    }
}